<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="14" passed="10" failed="1" skipped="1">
  <reporter-output>
    <line>
      <![CDATA[TestIncludeExcludeAndGroups :B Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
    <line>
      <![CDATA[TestIncludeExcludeAndGroups:D Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
    <line>
      <![CDATA[TestIncludeExcludeAndGroups: E Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
    <line>
      <![CDATA[ TestIncludeExcludeAndGroups:A Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
    <line>
      <![CDATA[ TestIncludeExcludeAndGroups:A Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
    <line>
      <![CDATA[ TestIncludeExcludeAndGroups:A Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
    <line>
      <![CDATA[TestIncludeExcludeAndGroups:C Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
    <line>
      <![CDATA[ A Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
    <line>
      <![CDATA[B Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
    <line>
      <![CDATA[D Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
    <line>
      <![CDATA[ E Method is called]]>
    </line>
    <line>
      <![CDATA[Test_EtoE_BuyProduct :After method]]>
    </line>
  </reporter-output>
  <suite started-at="2022-06-09T07:28:02 IST" name="Suite" finished-at="2022-06-09T07:28:07 IST" duration-ms="5559">
    <groups>
    </groups>
    <test started-at="2022-06-09T07:28:02 IST" name="BuyProduct" finished-at="2022-06-09T07:28:07 IST" duration-ms="5559">
      <class name="useClasses.TNG_keywords">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:useClasses.TNG_keywords@20140db9]" started-at="2022-06-09T07:28:02 IST" name="beforeClass" finished-at="2022-06-09T07:28:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="A()[pri:0, instance:useClasses.TNG_keywords@20140db9]" started-at="2022-06-09T07:28:02 IST" name="A" finished-at="2022-06-09T07:28:02 IST" duration-ms="16" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[for fun]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: for fun
at org.testng.Assert.fail(Assert.java:99)
at useClasses.TNG_keywords.A(TNG_keywords.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[ A Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- A -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TNG_keywords@20140db9]" started-at="2022-06-09T07:28:02 IST" name="afterMethod" finished-at="2022-06-09T07:28:07 IST" duration-ms="5212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=A status=FAILURE method=TNG_keywords.A()[pri:0, instance:useClasses.TNG_keywords@20140db9] output= A Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="B()[pri:0, instance:useClasses.TNG_keywords@20140db9]" started-at="2022-06-09T07:28:07 IST" name="B" finished-at="2022-06-09T07:28:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[B Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- B -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TNG_keywords@20140db9]" started-at="2022-06-09T07:28:07 IST" name="afterMethod" finished-at="2022-06-09T07:28:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=B status=SUCCESS method=TNG_keywords.B()[pri:0, instance:useClasses.TNG_keywords@20140db9] output=B Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="C()[pri:0, instance:useClasses.TNG_keywords@20140db9]" started-at="2022-06-09T07:28:07 IST" name="C" finished-at="2022-06-09T07:28:07 IST" depends-on-methods="useClasses.TNG_keywords.A" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TNG_keywords.C()[pri:0, instance:useClasses.TNG_keywords@20140db9] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TNG_keywords.C()[pri:0, instance:useClasses.TNG_keywords@20140db9] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C -->
        <test-method signature="D()[pri:0, instance:useClasses.TNG_keywords@20140db9]" started-at="2022-06-09T07:28:07 IST" name="D" finished-at="2022-06-09T07:28:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[D Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- D -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TNG_keywords@20140db9]" started-at="2022-06-09T07:28:07 IST" name="afterMethod" finished-at="2022-06-09T07:28:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=D status=SUCCESS method=TNG_keywords.D()[pri:0, instance:useClasses.TNG_keywords@20140db9] output=D Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="E()[pri:0, instance:useClasses.TNG_keywords@20140db9]" started-at="2022-06-09T07:28:07 IST" name="E" finished-at="2022-06-09T07:28:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[ E Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- E -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TNG_keywords@20140db9]" started-at="2022-06-09T07:28:07 IST" name="afterMethod" finished-at="2022-06-09T07:28:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=E status=SUCCESS method=TNG_keywords.E()[pri:0, instance:useClasses.TNG_keywords@20140db9] output= E Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- useClasses.TNG_keywords -->
      <class name="useClasses.TestIncludeExcludeAndGroups">
        <test-method is-config="true" signature="getExtentReporter()[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:01 IST" name="getExtentReporter" finished-at="2022-06-09T07:28:02 IST" duration-ms="742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExtentReporter -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="beforeClass" finished-at="2022-06-09T07:28:02 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="B()[pri:-6, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="B" finished-at="2022-06-09T07:28:02 IST" duration-ms="11" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestIncludeExcludeAndGroups :B Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- B -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="afterMethod" finished-at="2022-06-09T07:28:02 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=B status=SUCCESS method=TestIncludeExcludeAndGroups.B()[pri:-6, instance:useClasses.TestIncludeExcludeAndGroups@e350b40] output=TestIncludeExcludeAndGroups :B Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="D()[pri:-1, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="D" finished-at="2022-06-09T07:28:02 IST" duration-ms="4" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestIncludeExcludeAndGroups:D Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- D -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="afterMethod" finished-at="2022-06-09T07:28:02 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=D status=SUCCESS method=TestIncludeExcludeAndGroups.D()[pri:-1, instance:useClasses.TestIncludeExcludeAndGroups@e350b40] output=TestIncludeExcludeAndGroups:D Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="E()[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="E" finished-at="2022-06-09T07:28:02 IST" duration-ms="6" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestIncludeExcludeAndGroups: E Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- E -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="afterMethod" finished-at="2022-06-09T07:28:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=E status=SUCCESS method=TestIncludeExcludeAndGroups.E()[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40] output=TestIncludeExcludeAndGroups: E Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="A()[pri:2, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="A" finished-at="2022-06-09T07:28:02 IST" duration-ms="20" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[ TestIncludeExcludeAndGroups:A Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- A -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="afterMethod" finished-at="2022-06-09T07:28:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=A status=SUCCESS method=TestIncludeExcludeAndGroups.A()[pri:2, instance:useClasses.TestIncludeExcludeAndGroups@e350b40] output= TestIncludeExcludeAndGroups:A Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="A()[pri:2, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="A" finished-at="2022-06-09T07:28:02 IST" duration-ms="12" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[ TestIncludeExcludeAndGroups:A Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- A -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="afterMethod" finished-at="2022-06-09T07:28:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=A status=SUCCESS method=TestIncludeExcludeAndGroups.A()[pri:2, instance:useClasses.TestIncludeExcludeAndGroups@e350b40] output= TestIncludeExcludeAndGroups:A Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="A()[pri:2, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="A" finished-at="2022-06-09T07:28:02 IST" duration-ms="7" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[ TestIncludeExcludeAndGroups:A Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- A -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="afterMethod" finished-at="2022-06-09T07:28:02 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=A status=SUCCESS method=TestIncludeExcludeAndGroups.A()[pri:2, instance:useClasses.TestIncludeExcludeAndGroups@e350b40] output= TestIncludeExcludeAndGroups:A Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="C()[pri:-6, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="C" finished-at="2022-06-09T07:28:02 IST" depends-on-methods="useClasses.TestIncludeExcludeAndGroups.A" duration-ms="5" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestIncludeExcludeAndGroups:C Method is called]]>
            </line>
          </reporter-output>
        </test-method> <!-- C -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:02 IST" name="afterMethod" finished-at="2022-06-09T07:28:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=C status=SUCCESS method=TestIncludeExcludeAndGroups.C()[pri:-6, instance:useClasses.TestIncludeExcludeAndGroups@e350b40] output=TestIncludeExcludeAndGroups:C Method is called]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Test_EtoE_BuyProduct :After method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="flushReporter()[pri:0, instance:useClasses.TestIncludeExcludeAndGroups@e350b40]" started-at="2022-06-09T07:28:08 IST" name="flushReporter" finished-at="2022-06-09T07:28:08 IST" duration-ms="678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReporter -->
      </class> <!-- useClasses.TestIncludeExcludeAndGroups -->
    </test> <!-- BuyProduct -->
  </suite> <!-- Suite -->
</testng-results>
